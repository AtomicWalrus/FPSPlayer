//-----------------------------------------------------------------------------
// Copyright (c) 2012 GarageGames, LLC
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.
//-----------------------------------------------------------------------------

if ( !isObject( playerKeyMap ) )
{
    new ActionMap(playerKeyMap)
    {
      humanReadableName = "Player";  
    };
}

//------------------------------------------------------------------------------
// Set up remappable entries
//------------------------------------------------------------------------------
addKeyRemap("Forward", "playerKeyMap", "keyboard", "moveForward", "Forward Movement");
addKeyRemap("Backward", "playerKeyMap", "keyboard", "movebackward", "Backward Movement");
addKeyRemap("Strafe Left", "playerKeyMap", "keyboard", "moveleft", "Left Strafing Movement");
addKeyRemap("Strafe Right", "playerKeyMap", "keyboard", "moveright", "Right Strafing Movement");
addKeyRemap("Ascend", "playerKeyMap", "keyboard", "moveup", "Makes the camera ascend");
addKeyRemap("Descend", "playerKeyMap", "keyboard", "movedown", "Makes the camera descend");
addKeyRemap("Jump", "playerKeyMap", "keyboard", "jump", "Jump");
addKeyRemap("Sprint", "playerKeyMap", "keyboard", "doSprint", "Sprint");

//------------------------------------------------------------------------------
// Movement Keys
//------------------------------------------------------------------------------
playerKeyMap.bind( keyboard, a, moveleft );
playerKeyMap.bind( keyboard, d, moveright );
playerKeyMap.bind( keyboard, left, moveleft );
playerKeyMap.bind( keyboard, right, moveright );

playerKeyMap.bind( keyboard, w, moveforward );
playerKeyMap.bind( keyboard, s, movebackward );
playerKeyMap.bind( keyboard, up, moveforward );
playerKeyMap.bind( keyboard, down, movebackward );

playerKeyMap.bind( keyboard, e, moveup );
playerKeyMap.bind( keyboard, c, movedown );

playerKeyMap.bind( keyboard, space, jump );
playerKeyMap.bind( mouse, xaxis, yaw );
playerKeyMap.bind( mouse, yaxis, pitch );

playerKeyMap.bind( gamepad, thumbrx, "D", "-0.23 0.23", gamepadYaw );
playerKeyMap.bind( gamepad, thumbry, "D", "-0.23 0.23", gamepadPitch );
playerKeyMap.bind( gamepad, thumblx, "D", "-0.23 0.23", gamePadMoveX );
playerKeyMap.bind( gamepad, thumbly, "D", "-0.23 0.23", gamePadMoveY );

playerKeyMap.bind( gamepad, btn_a, jump );
playerKeyMap.bindCmd( gamepad, btn_back, "disconnect();", "" );

playerKeyMap.bindCmd(gamepad, dpadl, "toggleLightColorViz();", "");
playerKeyMap.bindCmd(gamepad, dpadu, "toggleDepthViz();", "");
playerKeyMap.bindCmd(gamepad, dpadd, "toggleNormalsViz();", "");
playerKeyMap.bindCmd(gamepad, dpadr, "toggleLightSpecularViz();", "");

// ----------------------------------------------------------------------------
// Stance/pose
// ----------------------------------------------------------------------------
playerKeyMap.bind(keyboard, lcontrol, doCrouch);
playerKeyMap.bind(gamepad, btn_b, doCrouch);

playerKeyMap.bind(keyboard, lshift, doSprint);

// ----------------------------------------------------------------------------
// Misc. Player stuff
// ----------------------------------------------------------------------------

// Gideon does not have these animations, so the player does not need access to
// them.  Commenting instead of removing so as to retain an example for those
// who will want to use a player model that has these animations and wishes to
// use them.

//playerKeyMap.bindCmd(keyboard, "ctrl w", "commandToServer('playCel',\"wave\");", "");
//playerKeyMap.bindCmd(keyboard, "ctrl s", "commandToServer('playCel',\"salute\");", "");

playerKeyMap.bindCmd(keyboard, "ctrl k", "commandToServer('suicide');", "");

playerKeyMap.push();